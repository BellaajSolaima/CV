name: SonarQube Analysis (Local)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarQubeScan:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Debug Secrets
        run: |
          if [[ -z "${{ secrets.SONAR_TOKEN }}" ]]; then
            echo "❌ SONAR_TOKEN is not set in GitHub Secrets!"
            exit 1
          else
            echo "✅ SONAR_TOKEN is set."
          fi

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Permet une analyse plus précise

      - name: Stop and remove existing SonarQube container (if exists)
        run: docker rm -f sonarqube || true

      - name: Start SonarQube with Docker
        run: |
          docker run -d --name sonarqube -p 9000:9000 -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true sonarqube:lts
          echo "Waiting for SonarQube to be ready..."
          until [[ "$(curl -s http://localhost:9000/api/system/status | jq -r .status)" == "UP" ]]; do
            echo "SonarQube is still starting. Waiting 10 seconds..."
            sleep 10
          done
          echo "SonarQube is fully operational!"

      - name: Check SonarQube Connection
        run: curl -v ${{ secrets.SONAR_HOST_URL }}/api/system/status

      - name: Clear SonarQube Scanner Cache
        run: rm -rf ~/.sonar/cache

      - name: Install SonarQube Scanner
        run: npm install -g sonarqube-scanner

      - name: Run SonarQube Analysis
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: . # Lancer l'analyse sur tout le projet

      # Optionnel : Vérification du Quality Gate pour empêcher des builds si les standards ne sont pas respectés
      - name: SonarQube Quality Gate Check
        uses: SonarSource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
